name: Test NMMA API

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    name: Test SkyPortal
    runs-on: ubuntu-latest
    timeout-minutes: 90

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: nmma
          POSTGRES_PASSWORD: anything
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a
        # healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache
            ~/.local
            ~/.npm
            cache
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Checkout master
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: master
          submodules: true

      - name: Write SkyPortal configs
        run: |
          cat << EOF > config.yaml
            database:
              database: nmma
              host: localhost
              port: 5432
              user: nmma
              password: anything
          EOF

          cat << EOF > test_config.yaml
            database:
              database: nmma_test
              user: nmma
              host: localhost
              port: 5432
              password: anything

            server:
              auth:
                debug_login: True
          EOF

      - name: Install system dependencies
        run: |
          curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -

          sudo apt install -y wget nodejs unzip firefox nginx

          pip install --upgrade pip
          pip install wheel numpy

          which python; python --version

      - name: Install SkyPortal dependencies
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          make dependencies

      - name: Initialize NMMA
        run: |
          # Usually, we create databases on the local machine, so
          # `createdb` just works out of the box.  However, when doing
          # this on a server, as in our case, we need to specify extra
          # options.
          #
          # db_init should not complain if the databases exist already
          #
          echo "localhost:5432:*:nmma:anything" > ~/.pgpass
          chmod 600 ~/.pgpass

          createdb -h localhost -U nmma nmma_test
          psql -U nmma -h localhost -c "GRANT ALL PRIVILEGES ON DATABASE nmma_test TO nmma;" nmma_test

      - name: Checkout branch being tested
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
          clean: false

      - name: Formatting and linting checks
        if: github.ref != 'refs/heads/master'
        run: |
          pip install pre-commit
          pre-commit run --from-ref ${{ github.event.pull_request.base.sha }} --to-ref ${{ github.event.pull_request.head.sha }}

      - name: Run test suite
        run: |
          PYTHONPATH=. py.test nmma_db/tests/test_api.py

      - name: Upload logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs
          path: log

      - name: Upload test post-mortem reports
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test-results
          path: test-results
